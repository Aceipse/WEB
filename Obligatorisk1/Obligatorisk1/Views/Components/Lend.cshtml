@using Obligatorisk1.Models
@model Obligatorisk1.Models.Component

@{
    ViewBag.Title = "title";
    int ChoosenId = 0;
}

<h2>Lend out component</h2>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ComponentName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ComponentName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ComponentInfo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ComponentInfo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Datasheet)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Datasheet)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Image)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Image)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ManufacturerLink)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ManufacturerLink)
        </dd>

    </dl>
</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SpecificComponent[0].ComponentNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SpecificComponent[0].SerieNr)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SpecificComponent[0].LoanInformation.LoanDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SpecificComponent[0].LoanInformation.User.StudieNumber)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.SpecificComponent)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ComponentNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SerieNr)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanInformation.LoanDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoanInformation.User.StudieNumber)
            </td>
            <td>
                @if (item.LoanInformation != null)
                {
                    @Html.ActionLink("Return", "EditLoanInformation", new {componentId=Model.Id, specificId= item.Id },new {@class= "btn btn-default" });
                }
                else
                {
                    <button class="btn btn-default" onclick="$('#LendModal').modal('show'); $('#specificId').val(@item.Id);">Lend Out</button>
                }
               
            </td>
        </tr>
    }

</table>

<div class="modal fade" id="LendModal" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="true" data-keyboard="false">
    <div class="modal-dialog center">
        <div class="modal-content modal-heigh">
            <div class="modal-body">
                @using (Html.BeginForm("EditLoanInformation","Components"))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Loan Informations</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*@Html.HiddenFor(model => model.SpecificComponent.First(x => x.Id == ChoosenId).LoanInformation.Id)*@
                        <input hidden name="componentId" value="@Model.Id"/>
                        <input id="specificId" hidden name="specificId"/>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificComponent.First().LoanInformation.LoanDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SpecificComponent.First().LoanInformation.LoanDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificComponent.First().LoanInformation.LoanDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificComponent.First().LoanInformation.ReservationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model =>model.SpecificComponent.First().LoanInformation.ReservationDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificComponent.First().LoanInformation.ReservationDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificComponent.First().LoanInformation.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SpecificComponent.First().LoanInformation.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificComponent.First().LoanInformation.ReturnDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificComponent.First().LoanInformation.User.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SpecificComponent.First().LoanInformation.User.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificComponent.First().LoanInformation.User.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificComponent.First().LoanInformation.User.StudieNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SpecificComponent.First().LoanInformation.User.StudieNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificComponent.First().LoanInformation.User.StudieNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SpecificComponent.First().LoanInformation.User.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SpecificComponent.First().LoanInformation.User.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SpecificComponent.First().LoanInformation.User.MobileNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>