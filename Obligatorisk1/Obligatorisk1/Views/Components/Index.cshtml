@using System.Activities.Statements
@using Obligatorisk1.Models
@model IEnumerable<Obligatorisk1.Models.Component>

@{
    ViewBag.Title = "Index";
}


<div class="col-md-2 sidebar">
    <h3>Categories</h3>
    <div class="row">
        @Html.ActionLink("All", "Index")
    </div>
    @foreach (Category category in ViewBag.Categories)
    {
        <div class="row">
            @Html.ActionLink(category.Value, "Index", new { category = category.Value })
        </div>

    }
</div>

<div class="col-md-10">
    <h3>Components</h3>

    <div class="text-center">
        <form>
            <input type="text" name="search"/>
            <button class="btn btn-default" type="submit">Search</button>
            @Html.ActionLink("Clear search", "Index", null, new {@class = "btn btn-default"})
        </form>
    </div>

    @Html.ActionLink("Create New", "Create")
    @if (Model.Any())
    {

        <table class="table">
            <tr>
                <th>
                    Component name
                </th>
                <th>
                    Category
                </th>
                <th>
                    Component info
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Datasheet)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>
                <th>
                    Manufacturer link
                </th>
                <th>
                    #Available
                </th>
                <th>
                    #Lend out
                </th>
                <th>Options</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ComponentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Value)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ComponentInfo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Datasheet)
                    </td>
                    <td>
                        @if (item.Image != null)
                        {
                            <div class="pull-left" style="margin-right: 10px">
                                <img class="img-thumbnail" width="75" height="75"
                                     src="@Url.Action("GetImage", "Components", new {componentId = item.Id})"/>
                            </div>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ManufacturerLink)
                    </td>
                    <td>
                        @item.SpecificComponent.Count(x => x.LoanInformation == null || x.LoanInformation.LoanDate == null)
                    </td>
                    <td>
                        @item.SpecificComponent.Count(x => x.LoanInformation != null && x.LoanInformation.LoanDate != null)
                        
                    </td>
                    <td onclick="toggleDropdown(@item.Id)">
                        <span class="glyphicon glyphicon-option-vertical"></span>
                        <div class="dropdown" style="margin-left: -150px">
                            <button class="btn btn-default dropdown-toggles hidden" type="button" id="@string.Format("dropdown{0}", item.Id)" data-toggle="dropdown">
                                Options
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                                <li>
                                    @Html.ActionLink("Edit", "Edit", new {id = item.Id})
                                </li>
                                <li>
                                    @Html.ActionLink("Details", "Details", new {id = item.Id})
                                </li>
                                <li>
                                    @Html.ActionLink("Delete", "Delete", new {id = item.Id})
                                </li>
                                <li>
                                    @Html.ActionLink("Lend", "Lend", new {id = item.Id})
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }

        </table>

    }
    else
    {
        <h3>No components found</h3>
    }
</div>
<script>
    var toggleDropdown = function (dropdownid) {
        event.stopPropagation();
        var mydropdown = $("#dropdown" + dropdownid);
        mydropdown.dropdown("toggle");
    }
</script>